# good, but not safe

#It's unsafe, because we don't know if there are any conflicts between test branch and master branch.

#It would "squeeze" all test commits into one merge commit on master; 
#that is to say on master branch, we can't see the all change logs of test branch.

git checkout master
git pull origin master
git merge test
git push origin master


# safer -> lose changes history logged in test branch site: https://stackoverflow.com/questions/5601931/how-do-i-safely-merge-a-git-branch-into-master

git checkout test
git pull 
git checkout master
git pull
git merge --no-ff --no-commit test


#Test merge before commit, avoid a fast-forward commit by --no-ff,
#If conflict is encountered, we can run git status to check details about the conflicts and try to solve 

git status

# Once we solve the conflicts, or if there is no conflict, we commit and push them

git commit -m 'merge test branch'
git push
