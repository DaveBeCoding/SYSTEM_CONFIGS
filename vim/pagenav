TOP 9

1. $ -> MOVE TO THE END OF THE LINE

2. 0 -> MOVE TO THE BEGINNING OF THE LINE

3. H -> JUMP TO THE TOP OF THE SCREEN 

4. L -> JUMP TO THE BOTTOM OF THE SCREEN 

5. H -> JUMP TO THE TOP OF THE SCREEN 

6. L -> JUMP TO THE BOTTOM OF THE SCREEN 

7. G -> JUMP TO END OF FILE p ...  gg -> JUMP TO THE TOP OF THE FILE  

8. g; -> JUMP TO PLACE OF LAST EDIT

9. x -> Delete chars in a line

10. c-[ -> <ESC> 



						COPY AND PASTE

COPY == YANK   PASTE == PUT 

yy or y        p <below current line> or P <Above current line>

Copy [N] lines under cursor, enter into normal mode -> [N]yy

Copy specific section of lines -> y[N]-1k == y1k



						UNDO
[Normal mode] -> u | :u :un

:earlier &&  :later <undo>

LOOK UP ->  :make && quickfix 

                       FILES

:ls -> view list of open files

:b <file> -> switch

:b# -> togle file(s)


						TEMINAL/WINDOW

:ter -> shell 

CTRL-W -> Buffer/Term

------------------------------------------

:help <topic>

:help :split

:help :terminal

:h <terminal-use>

:h <terminal-typing>

:h <terminal-input>

:help CTRL-\_CTRL-N

:shell

CTRL-Z || :stop

:ter (nvim users) != :shell (depricated in nvim)

------------------------------------------
*
*
*
*
------------------------------------------
				GENERAL 
------------------------------------------

w -> Move forward to beginning of a word

" [N} = int

[N]w -> move N word(s) forward

W -> move forward a word {non-whitespace, char}

b -> move back a word

[N]b -> move back N word(s)

$ -> MOVE TO THE END OF THE LINE

o -> MOVE TO THE BEGINNING OF THE LINE

^ -> first nonblank character of line 

) -> Jump forward one sentence

( -> Jump backward one sentence 

} -> Jump forward one paragraph

{ -> Jump Backwards one paragraph

j -> Jump forward one line 

[N]j -> Jump forward N line(s)

k -> Jump backwards one line

[N]k -> Jump backwards N lines

H -> JUMP TO THE TOP OF THE SCREEN 

M -> Jump to the middle of the screen 

L -> JUMP TO THE BOTTOM OF THE SCREEN 

N<PageUp> | N<ctrl-B> -> move N pages up

N<PageDown> | N<ctrl-F> -> move N pages down

G -> JUMP TO END OF FILE

g -> Jump x screen lines in direction (up/down)

1G -> JUMO TO BEGINNING OF FILE == gg

[N]G -> JUMP TO LINE N

" -> RETURN TO THE LINE WHERE THE CURSOR WAS LAST AT BEFORE JUMP

'. -> Jump to the last changed line

% -> Jump to the corresponding item e.g. from an open brace to its matching closing brace. <Moving to matching bracses>

| -> Jump to first column of the current line

[N]| -> Jump tot he N column of the current line

g; -> JUMP TO PLACE OF LAST EDIT

:[line number] -> move to specific line/location

*
*
*
*
*
------------------------------------------
				MODE(S)
------------------------------------------


[visual]

CTRL-V 

arrow/<j><k> -> select line(s)

shift + i

[normal mode] -> once back in NM ones changes will be made

pressing <.> after visual block operation will repeat that operation where the cursor is -> ELITE 



------------------------------------------
				
			EDIT 

------------------------------------------

c -> CHANGE

d -> DELETE

a -> APPEND

r -> REPLACE

I -> BEGINNING OF LINE

A -> END OF LINE

o -> INSERT BELOW

O -> INSERT ABOVE

ci" -> CHANGE EVERYTHING IN DOUBLE QUOTES "

ciw -> CHANGE EVERYTHING INSIDE OF WORD

cit -> CHANGE EVERYTHING INSIDE OF TAG

ca" -> REMOVE DOUBLE QUOTES AND EVERYTHING INSIDE THEM 

c% -> DELETE UP TO A POINT EX. FOO(GOO()) WILL LEAVE FOO()


------------------------------------------
				
			WINDOWS <files>

------------------------------------------

:e [tab]

:b [file...] -> :h buffers

:bn -> next

:bp 

:argadd **/*.c<TAB> -> **/*.[ext] 

:set path+=** -> [here/*] .... :find name.ext <ENTER> -> switched

:filter '.*md' oldfiles -> all recent .md changes made 

**:h wildmode**

:set wildmode=longest:full,full -> <TAB>

:set wildignorecase 

:set wildignore=[ignore...] -> ex :set wildignore=\*.git/\*

***
:split [file..] -> <c-w><c-s> && <c-w><c-v> -> <y-plane>

:vsplit [file...] -> <x-plane>



------------------------------------------
				
			FIND & REPLACE

------------------------------------------

Open the file in Vim
Press slash (/) key along with the search term like “/ search_term” and press Enter. It will highlight the selected word.
Then hit the keystroke cgn to replace the highlighted word and enter the replace_term
Go back to normal mode. Next, hit “n” to move to the next occurrence of the search term.
Then press the dot (.) if you want to replace the next occurrence with the same replace_term otherwise again press the “n” key to move to the next occurrence.


------------------------------------------

             FIle(s) Editiing & Opening

------------------------------------------


Openning additional files for editing
:e <file_name>.txt -> :e == edit

ZZ -> <shift+Z> save changes in current file(s)


------------------------------------------

             Window(s) & Size

------------------------------------------
Change Window size(s)

CTRL-W -/+

:resize [+|-]N
:vertical resize [+|-] -> vertical split

:h window-resize

:res | :resize 

:res +5 -> Height <window>
:res -5

:vertical resize +5 -> Width <window>
:vertical resize -5


------------------------------------------
				
			Delete from Cursor back

------------------------------------------
d$ 




------------------------------------------

             SUBSTITUTE COMMAND

------------------------------------------

 ** Type  :s/old/new/g  to substitute 'new' for 'old'. **

 
   1. Move the cursor to the line below marked --->.
 
   2. Type  :s/thee/the <ENTER>  .  Note that this command only changes the
      first occurrence of "thee" in the line.
 
   3. Now type  :s/thee/the/g .  Adding the  g  flag means to substitute
      globally in the line, change all occurrences of "thee" in the line.
 
 ---> thee best time to see thee flowers is in thee spring.
 
   4. To change every occurrence of a character string between two lines,
      
      type   :#,#s/old/new/g    where #,# are the line numbers of the range
                            of lines where the substitution is to be done.
      
      Type   :%s/old/new/g  to change every occurrence in the whole file.
     
     Type   :%s/old/new/gc     to find every occurrence in the whole file,
                        with a prompt whether to substitute or not.







------------------------------------------

             [NEW TITLE/TOPIC HERE]

------------------------------------------

